// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: dnd5e.proto
#ifndef GRPC_dnd5e_2eproto__INCLUDED
#define GRPC_dnd5e_2eproto__INCLUDED

#include "dnd5e.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/codegen/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/codegen/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/impl/codegen/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>

namespace dnd5e {

class Dnd5eService final {
 public:
  static constexpr char const* service_full_name() {
    return "dnd5e.Dnd5eService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status GetEndpoints(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest& request, ::dnd5e::GetEndpointsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetEndpointsResponse>> AsyncGetEndpoints(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetEndpointsResponse>>(AsyncGetEndpointsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetEndpointsResponse>> PrepareAsyncGetEndpoints(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetEndpointsResponse>>(PrepareAsyncGetEndpointsRaw(context, request, cq));
    }
    virtual ::grpc::Status GetList(::grpc::ClientContext* context, const ::dnd5e::GetListRequest& request, ::dnd5e::GetListResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetListResponse>> AsyncGetList(::grpc::ClientContext* context, const ::dnd5e::GetListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetListResponse>>(AsyncGetListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetListResponse>> PrepareAsyncGetList(::grpc::ClientContext* context, const ::dnd5e::GetListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetListResponse>>(PrepareAsyncGetListRaw(context, request, cq));
    }
    virtual ::grpc::Status GetItem(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest& request, ::dnd5e::GetItemResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetItemResponse>> AsyncGetItem(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetItemResponse>>(AsyncGetItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetItemResponse>> PrepareAsyncGetItem(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetItemResponse>>(PrepareAsyncGetItemRaw(context, request, cq));
    }
    virtual ::grpc::Status SearchItems(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest& request, ::dnd5e::SearchItemsResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::SearchItemsResponse>> AsyncSearchItems(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::SearchItemsResponse>>(AsyncSearchItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::SearchItemsResponse>> PrepareAsyncSearchItems(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::SearchItemsResponse>>(PrepareAsyncSearchItemsRaw(context, request, cq));
    }
    virtual ::grpc::Status HealthCheck(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest& request, ::dnd5e::HealthCheckResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::HealthCheckResponse>> AsyncHealthCheck(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::HealthCheckResponse>>(AsyncHealthCheckRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::HealthCheckResponse>> PrepareAsyncHealthCheck(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::HealthCheckResponse>>(PrepareAsyncHealthCheckRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void GetEndpoints(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest* request, ::dnd5e::GetEndpointsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetEndpoints(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest* request, ::dnd5e::GetEndpointsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetList(::grpc::ClientContext* context, const ::dnd5e::GetListRequest* request, ::dnd5e::GetListResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetList(::grpc::ClientContext* context, const ::dnd5e::GetListRequest* request, ::dnd5e::GetListResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void GetItem(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest* request, ::dnd5e::GetItemResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void GetItem(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest* request, ::dnd5e::GetItemResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void SearchItems(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest* request, ::dnd5e::SearchItemsResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void SearchItems(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest* request, ::dnd5e::SearchItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void HealthCheck(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest* request, ::dnd5e::HealthCheckResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void HealthCheck(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest* request, ::dnd5e::HealthCheckResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetEndpointsResponse>* AsyncGetEndpointsRaw(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetEndpointsResponse>* PrepareAsyncGetEndpointsRaw(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetListResponse>* AsyncGetListRaw(::grpc::ClientContext* context, const ::dnd5e::GetListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetListResponse>* PrepareAsyncGetListRaw(::grpc::ClientContext* context, const ::dnd5e::GetListRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetItemResponse>* AsyncGetItemRaw(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::GetItemResponse>* PrepareAsyncGetItemRaw(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::SearchItemsResponse>* AsyncSearchItemsRaw(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::SearchItemsResponse>* PrepareAsyncSearchItemsRaw(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::HealthCheckResponse>* AsyncHealthCheckRaw(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::dnd5e::HealthCheckResponse>* PrepareAsyncHealthCheckRaw(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status GetEndpoints(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest& request, ::dnd5e::GetEndpointsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::GetEndpointsResponse>> AsyncGetEndpoints(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::GetEndpointsResponse>>(AsyncGetEndpointsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::GetEndpointsResponse>> PrepareAsyncGetEndpoints(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::GetEndpointsResponse>>(PrepareAsyncGetEndpointsRaw(context, request, cq));
    }
    ::grpc::Status GetList(::grpc::ClientContext* context, const ::dnd5e::GetListRequest& request, ::dnd5e::GetListResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::GetListResponse>> AsyncGetList(::grpc::ClientContext* context, const ::dnd5e::GetListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::GetListResponse>>(AsyncGetListRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::GetListResponse>> PrepareAsyncGetList(::grpc::ClientContext* context, const ::dnd5e::GetListRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::GetListResponse>>(PrepareAsyncGetListRaw(context, request, cq));
    }
    ::grpc::Status GetItem(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest& request, ::dnd5e::GetItemResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::GetItemResponse>> AsyncGetItem(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::GetItemResponse>>(AsyncGetItemRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::GetItemResponse>> PrepareAsyncGetItem(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::GetItemResponse>>(PrepareAsyncGetItemRaw(context, request, cq));
    }
    ::grpc::Status SearchItems(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest& request, ::dnd5e::SearchItemsResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::SearchItemsResponse>> AsyncSearchItems(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::SearchItemsResponse>>(AsyncSearchItemsRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::SearchItemsResponse>> PrepareAsyncSearchItems(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::SearchItemsResponse>>(PrepareAsyncSearchItemsRaw(context, request, cq));
    }
    ::grpc::Status HealthCheck(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest& request, ::dnd5e::HealthCheckResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::HealthCheckResponse>> AsyncHealthCheck(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::HealthCheckResponse>>(AsyncHealthCheckRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::HealthCheckResponse>> PrepareAsyncHealthCheck(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::dnd5e::HealthCheckResponse>>(PrepareAsyncHealthCheckRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void GetEndpoints(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest* request, ::dnd5e::GetEndpointsResponse* response, std::function<void(::grpc::Status)>) override;
      void GetEndpoints(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest* request, ::dnd5e::GetEndpointsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetList(::grpc::ClientContext* context, const ::dnd5e::GetListRequest* request, ::dnd5e::GetListResponse* response, std::function<void(::grpc::Status)>) override;
      void GetList(::grpc::ClientContext* context, const ::dnd5e::GetListRequest* request, ::dnd5e::GetListResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void GetItem(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest* request, ::dnd5e::GetItemResponse* response, std::function<void(::grpc::Status)>) override;
      void GetItem(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest* request, ::dnd5e::GetItemResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void SearchItems(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest* request, ::dnd5e::SearchItemsResponse* response, std::function<void(::grpc::Status)>) override;
      void SearchItems(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest* request, ::dnd5e::SearchItemsResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void HealthCheck(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest* request, ::dnd5e::HealthCheckResponse* response, std::function<void(::grpc::Status)>) override;
      void HealthCheck(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest* request, ::dnd5e::HealthCheckResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::dnd5e::GetEndpointsResponse>* AsyncGetEndpointsRaw(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::GetEndpointsResponse>* PrepareAsyncGetEndpointsRaw(::grpc::ClientContext* context, const ::dnd5e::GetEndpointsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::GetListResponse>* AsyncGetListRaw(::grpc::ClientContext* context, const ::dnd5e::GetListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::GetListResponse>* PrepareAsyncGetListRaw(::grpc::ClientContext* context, const ::dnd5e::GetListRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::GetItemResponse>* AsyncGetItemRaw(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::GetItemResponse>* PrepareAsyncGetItemRaw(::grpc::ClientContext* context, const ::dnd5e::GetItemRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::SearchItemsResponse>* AsyncSearchItemsRaw(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::SearchItemsResponse>* PrepareAsyncSearchItemsRaw(::grpc::ClientContext* context, const ::dnd5e::SearchItemsRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::HealthCheckResponse>* AsyncHealthCheckRaw(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::dnd5e::HealthCheckResponse>* PrepareAsyncHealthCheckRaw(::grpc::ClientContext* context, const ::dnd5e::HealthCheckRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_GetEndpoints_;
    const ::grpc::internal::RpcMethod rpcmethod_GetList_;
    const ::grpc::internal::RpcMethod rpcmethod_GetItem_;
    const ::grpc::internal::RpcMethod rpcmethod_SearchItems_;
    const ::grpc::internal::RpcMethod rpcmethod_HealthCheck_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status GetEndpoints(::grpc::ServerContext* context, const ::dnd5e::GetEndpointsRequest* request, ::dnd5e::GetEndpointsResponse* response);
    virtual ::grpc::Status GetList(::grpc::ServerContext* context, const ::dnd5e::GetListRequest* request, ::dnd5e::GetListResponse* response);
    virtual ::grpc::Status GetItem(::grpc::ServerContext* context, const ::dnd5e::GetItemRequest* request, ::dnd5e::GetItemResponse* response);
    virtual ::grpc::Status SearchItems(::grpc::ServerContext* context, const ::dnd5e::SearchItemsRequest* request, ::dnd5e::SearchItemsResponse* response);
    virtual ::grpc::Status HealthCheck(::grpc::ServerContext* context, const ::dnd5e::HealthCheckRequest* request, ::dnd5e::HealthCheckResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_GetEndpoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetEndpoints() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_GetEndpoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEndpoints(::grpc::ServerContext* /*context*/, const ::dnd5e::GetEndpointsRequest* /*request*/, ::dnd5e::GetEndpointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEndpoints(::grpc::ServerContext* context, ::dnd5e::GetEndpointsRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::GetEndpointsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetList() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_GetList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetList(::grpc::ServerContext* /*context*/, const ::dnd5e::GetListRequest* /*request*/, ::dnd5e::GetListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetList(::grpc::ServerContext* context, ::dnd5e::GetListRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::GetListResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_GetItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_GetItem() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_GetItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetItem(::grpc::ServerContext* /*context*/, const ::dnd5e::GetItemRequest* /*request*/, ::dnd5e::GetItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetItem(::grpc::ServerContext* context, ::dnd5e::GetItemRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::GetItemResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_SearchItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_SearchItems() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_SearchItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchItems(::grpc::ServerContext* /*context*/, const ::dnd5e::SearchItemsRequest* /*request*/, ::dnd5e::SearchItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchItems(::grpc::ServerContext* context, ::dnd5e::SearchItemsRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::SearchItemsResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_HealthCheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_HealthCheck() {
      ::grpc::Service::MarkMethodAsync(4);
    }
    ~WithAsyncMethod_HealthCheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HealthCheck(::grpc::ServerContext* /*context*/, const ::dnd5e::HealthCheckRequest* /*request*/, ::dnd5e::HealthCheckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHealthCheck(::grpc::ServerContext* context, ::dnd5e::HealthCheckRequest* request, ::grpc::ServerAsyncResponseWriter< ::dnd5e::HealthCheckResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_GetEndpoints<WithAsyncMethod_GetList<WithAsyncMethod_GetItem<WithAsyncMethod_SearchItems<WithAsyncMethod_HealthCheck<Service > > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_GetEndpoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetEndpoints() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::GetEndpointsRequest, ::dnd5e::GetEndpointsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::GetEndpointsRequest* request, ::dnd5e::GetEndpointsResponse* response) { return this->GetEndpoints(context, request, response); }));}
    void SetMessageAllocatorFor_GetEndpoints(
        ::grpc::MessageAllocator< ::dnd5e::GetEndpointsRequest, ::dnd5e::GetEndpointsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::GetEndpointsRequest, ::dnd5e::GetEndpointsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetEndpoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEndpoints(::grpc::ServerContext* /*context*/, const ::dnd5e::GetEndpointsRequest* /*request*/, ::dnd5e::GetEndpointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEndpoints(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::GetEndpointsRequest* /*request*/, ::dnd5e::GetEndpointsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetList() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::GetListRequest, ::dnd5e::GetListResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::GetListRequest* request, ::dnd5e::GetListResponse* response) { return this->GetList(context, request, response); }));}
    void SetMessageAllocatorFor_GetList(
        ::grpc::MessageAllocator< ::dnd5e::GetListRequest, ::dnd5e::GetListResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::GetListRequest, ::dnd5e::GetListResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetList(::grpc::ServerContext* /*context*/, const ::dnd5e::GetListRequest* /*request*/, ::dnd5e::GetListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetList(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::GetListRequest* /*request*/, ::dnd5e::GetListResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_GetItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_GetItem() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::GetItemRequest, ::dnd5e::GetItemResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::GetItemRequest* request, ::dnd5e::GetItemResponse* response) { return this->GetItem(context, request, response); }));}
    void SetMessageAllocatorFor_GetItem(
        ::grpc::MessageAllocator< ::dnd5e::GetItemRequest, ::dnd5e::GetItemResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::GetItemRequest, ::dnd5e::GetItemResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_GetItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetItem(::grpc::ServerContext* /*context*/, const ::dnd5e::GetItemRequest* /*request*/, ::dnd5e::GetItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetItem(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::GetItemRequest* /*request*/, ::dnd5e::GetItemResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_SearchItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_SearchItems() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::SearchItemsRequest, ::dnd5e::SearchItemsResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::SearchItemsRequest* request, ::dnd5e::SearchItemsResponse* response) { return this->SearchItems(context, request, response); }));}
    void SetMessageAllocatorFor_SearchItems(
        ::grpc::MessageAllocator< ::dnd5e::SearchItemsRequest, ::dnd5e::SearchItemsResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::SearchItemsRequest, ::dnd5e::SearchItemsResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_SearchItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchItems(::grpc::ServerContext* /*context*/, const ::dnd5e::SearchItemsRequest* /*request*/, ::dnd5e::SearchItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchItems(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::SearchItemsRequest* /*request*/, ::dnd5e::SearchItemsResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_HealthCheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_HealthCheck() {
      ::grpc::Service::MarkMethodCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::dnd5e::HealthCheckRequest, ::dnd5e::HealthCheckResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::dnd5e::HealthCheckRequest* request, ::dnd5e::HealthCheckResponse* response) { return this->HealthCheck(context, request, response); }));}
    void SetMessageAllocatorFor_HealthCheck(
        ::grpc::MessageAllocator< ::dnd5e::HealthCheckRequest, ::dnd5e::HealthCheckResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(4);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::dnd5e::HealthCheckRequest, ::dnd5e::HealthCheckResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_HealthCheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HealthCheck(::grpc::ServerContext* /*context*/, const ::dnd5e::HealthCheckRequest* /*request*/, ::dnd5e::HealthCheckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* HealthCheck(
      ::grpc::CallbackServerContext* /*context*/, const ::dnd5e::HealthCheckRequest* /*request*/, ::dnd5e::HealthCheckResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_GetEndpoints<WithCallbackMethod_GetList<WithCallbackMethod_GetItem<WithCallbackMethod_SearchItems<WithCallbackMethod_HealthCheck<Service > > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_GetEndpoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetEndpoints() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_GetEndpoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEndpoints(::grpc::ServerContext* /*context*/, const ::dnd5e::GetEndpointsRequest* /*request*/, ::dnd5e::GetEndpointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetList() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_GetList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetList(::grpc::ServerContext* /*context*/, const ::dnd5e::GetListRequest* /*request*/, ::dnd5e::GetListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_GetItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_GetItem() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_GetItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetItem(::grpc::ServerContext* /*context*/, const ::dnd5e::GetItemRequest* /*request*/, ::dnd5e::GetItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_SearchItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_SearchItems() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_SearchItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchItems(::grpc::ServerContext* /*context*/, const ::dnd5e::SearchItemsRequest* /*request*/, ::dnd5e::SearchItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_HealthCheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_HealthCheck() {
      ::grpc::Service::MarkMethodGeneric(4);
    }
    ~WithGenericMethod_HealthCheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HealthCheck(::grpc::ServerContext* /*context*/, const ::dnd5e::HealthCheckRequest* /*request*/, ::dnd5e::HealthCheckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetEndpoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetEndpoints() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_GetEndpoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEndpoints(::grpc::ServerContext* /*context*/, const ::dnd5e::GetEndpointsRequest* /*request*/, ::dnd5e::GetEndpointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetEndpoints(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetList() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_GetList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetList(::grpc::ServerContext* /*context*/, const ::dnd5e::GetListRequest* /*request*/, ::dnd5e::GetListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetList(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_GetItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_GetItem() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_GetItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetItem(::grpc::ServerContext* /*context*/, const ::dnd5e::GetItemRequest* /*request*/, ::dnd5e::GetItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestGetItem(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_SearchItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_SearchItems() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_SearchItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchItems(::grpc::ServerContext* /*context*/, const ::dnd5e::SearchItemsRequest* /*request*/, ::dnd5e::SearchItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestSearchItems(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_HealthCheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_HealthCheck() {
      ::grpc::Service::MarkMethodRaw(4);
    }
    ~WithRawMethod_HealthCheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HealthCheck(::grpc::ServerContext* /*context*/, const ::dnd5e::HealthCheckRequest* /*request*/, ::dnd5e::HealthCheckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestHealthCheck(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(4, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetEndpoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetEndpoints() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetEndpoints(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetEndpoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetEndpoints(::grpc::ServerContext* /*context*/, const ::dnd5e::GetEndpointsRequest* /*request*/, ::dnd5e::GetEndpointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetEndpoints(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetList() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetList(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetList(::grpc::ServerContext* /*context*/, const ::dnd5e::GetListRequest* /*request*/, ::dnd5e::GetListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetList(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_GetItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_GetItem() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->GetItem(context, request, response); }));
    }
    ~WithRawCallbackMethod_GetItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status GetItem(::grpc::ServerContext* /*context*/, const ::dnd5e::GetItemRequest* /*request*/, ::dnd5e::GetItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* GetItem(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_SearchItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_SearchItems() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->SearchItems(context, request, response); }));
    }
    ~WithRawCallbackMethod_SearchItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status SearchItems(::grpc::ServerContext* /*context*/, const ::dnd5e::SearchItemsRequest* /*request*/, ::dnd5e::SearchItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* SearchItems(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_HealthCheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_HealthCheck() {
      ::grpc::Service::MarkMethodRawCallback(4,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->HealthCheck(context, request, response); }));
    }
    ~WithRawCallbackMethod_HealthCheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status HealthCheck(::grpc::ServerContext* /*context*/, const ::dnd5e::HealthCheckRequest* /*request*/, ::dnd5e::HealthCheckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* HealthCheck(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetEndpoints : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetEndpoints() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::GetEndpointsRequest, ::dnd5e::GetEndpointsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::GetEndpointsRequest, ::dnd5e::GetEndpointsResponse>* streamer) {
                       return this->StreamedGetEndpoints(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetEndpoints() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetEndpoints(::grpc::ServerContext* /*context*/, const ::dnd5e::GetEndpointsRequest* /*request*/, ::dnd5e::GetEndpointsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetEndpoints(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::GetEndpointsRequest,::dnd5e::GetEndpointsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetList : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetList() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::GetListRequest, ::dnd5e::GetListResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::GetListRequest, ::dnd5e::GetListResponse>* streamer) {
                       return this->StreamedGetList(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetList() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetList(::grpc::ServerContext* /*context*/, const ::dnd5e::GetListRequest* /*request*/, ::dnd5e::GetListResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetList(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::GetListRequest,::dnd5e::GetListResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_GetItem : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_GetItem() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::GetItemRequest, ::dnd5e::GetItemResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::GetItemRequest, ::dnd5e::GetItemResponse>* streamer) {
                       return this->StreamedGetItem(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_GetItem() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status GetItem(::grpc::ServerContext* /*context*/, const ::dnd5e::GetItemRequest* /*request*/, ::dnd5e::GetItemResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedGetItem(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::GetItemRequest,::dnd5e::GetItemResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_SearchItems : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_SearchItems() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::SearchItemsRequest, ::dnd5e::SearchItemsResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::SearchItemsRequest, ::dnd5e::SearchItemsResponse>* streamer) {
                       return this->StreamedSearchItems(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_SearchItems() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status SearchItems(::grpc::ServerContext* /*context*/, const ::dnd5e::SearchItemsRequest* /*request*/, ::dnd5e::SearchItemsResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedSearchItems(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::SearchItemsRequest,::dnd5e::SearchItemsResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_HealthCheck : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_HealthCheck() {
      ::grpc::Service::MarkMethodStreamed(4,
        new ::grpc::internal::StreamedUnaryHandler<
          ::dnd5e::HealthCheckRequest, ::dnd5e::HealthCheckResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::dnd5e::HealthCheckRequest, ::dnd5e::HealthCheckResponse>* streamer) {
                       return this->StreamedHealthCheck(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_HealthCheck() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status HealthCheck(::grpc::ServerContext* /*context*/, const ::dnd5e::HealthCheckRequest* /*request*/, ::dnd5e::HealthCheckResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedHealthCheck(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::dnd5e::HealthCheckRequest,::dnd5e::HealthCheckResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_GetEndpoints<WithStreamedUnaryMethod_GetList<WithStreamedUnaryMethod_GetItem<WithStreamedUnaryMethod_SearchItems<WithStreamedUnaryMethod_HealthCheck<Service > > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_GetEndpoints<WithStreamedUnaryMethod_GetList<WithStreamedUnaryMethod_GetItem<WithStreamedUnaryMethod_SearchItems<WithStreamedUnaryMethod_HealthCheck<Service > > > > > StreamedService;
};

}  // namespace dnd5e


#endif  // GRPC_dnd5e_2eproto__INCLUDED
